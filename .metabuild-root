globalConfig:
  buildRelDir: _build/metabuild
  binRelDir: _build/bin

haskellStackProjects: []
  # - haskellStackBin_RelFile: metabuild
  #   haskellStackSource_RelDir: Buildsystem/MetaBuilder
  #   haskellStackAutobuild: false
  #   installGlobal: true

agdaProjects:
  - sourceRelDir: .
    sourceOverwrite_RelDir: UnsafeOverwrite
    mainRelFile: Verification/Application/Main.agda
    agdaBin_RelFile: hata
    haskellStackTemplateRelDir: Runtime
    agdaAutobuild: false
    libraryDefinitions_Filename: hata.agda-lib

agdaPublishProjects:
  - projectName: vtc
    autobuild: false
    fastbuild: true
    source_RelDir: Verification
    # include_RelFiles:
    #   - Experimental/Theory/Std/Generic/Theory/Definition.agda
    #   - Experimental/Theory/Std/Generic/LogicalFramework/Definition.agda
    agdaPublishDocumentDescription:
      documentTitle: "Verified Type Checking"
      documentAuthor: "Maxim Urschumzew"
      documentType: SCReport
      documentDate: ""
      documentFilesAndHeadings:
      - = Theoretical foundations
      - == Basics
      - === Setoids
      - Conventions/Prelude/Classes/Setoid.agda
      - === Monoids
      - Core/Algebra/Monoid/Definition.agda
      # - == Data types
      # - === Basics
      # - === Lists
      # - Core/Algebra/Monoid/Free/Definition.agda
      # - == Categories
      # - Core/Category/Std/Category/Definition.agda
      # - "=== Example: Types"
      # - Core/Data/Universe/Instance/Category.agda
      # - "=== Example: Indexed Types"
      # - == Functors
      # - Core/Category/Std/Functor/Definition.agda
      # - "=== Example: List"
      # - Core/Data/List/Instance/Functor.agda
      # - == Special arrows
      # - Core/Category/Std/Morphism/Iso/Definition.agda
      # - Core/Category/Std/Morphism/Epi/Definition.agda
      # - == Colimits
      # - Core/Category/Std/Limit/Specific/Coproduct/Variant/Binary.agda
      # - Core/Category/Std/Limit/Specific/Coequalizer/Definition.agda
      # - == Unification
      # - Core/Computation/Unification/Definition.agda
      # - Core/Computation/Unification/Categorical/Definition.agda
      # - Core/Computation/Unification/Categorical/PrincipalFamily.agda
      # - Core/Computation/Unification/Categorical/PrincipalFamilyCat.agda
      # - == Relative Monads
      # - Core/Category/Std/RelativeMonad/Definition.agda
      # - == Category of Substitutions
      # - Core/Data/Indexed/Definition.agda
      # - === As Kleisli Category
      # - Core/Category/Std/RelativeMonad/KleisliCategory/Definition.agda
      # - === Inductively defined
      # - Core/Data/Substitution/Variant/Base/Definition.agda
      # - === Coproducts
      # - == Free finite coproduct theory
      # - === Definition
      # - Core/Theory/Std/Specific/ProductTheory/Unification/Definition.agda
      # - === Relative Monad and Category instances
      # - Core/Theory/Std/Specific/ProductTheory/Unification/Instance/FormalSystem.agda
      # - === Unification
      # - ==== Main proof
      # - = Hindley Damas Milner Type Theory
      # - == Types
      # - == Terms
      # - === Untyped terms
      # - === Typed terms
      # - === Small proof
      # - === Typechecking algorithm

    libraryDefinitions_Filename: hata.agda-lib

  - projectName: hata-book
    autobuild: false
    fastbuild: false
    source_RelDir: Verification
    agdaPublishDocumentDescription:
      documentTitle: "Project æ——"
      documentSubtitle: "Theory and Implementation of Programming Languages \\\\ \\vskip 0.8em Exposition, Development notes and Manual"
      documentAuthor: "Maxim Urschumzew"
      documentType: SCReport
      documentDate: ""
      documentFilesAndHeadings:
      - Overview.agda
      - ===About
      - Overview/About.agda
      - =Theoretical Foundations
      - ==Algebra
      - ==Order Theory
      - ==Category Theory
      - ==Theories
      - ===Std-Generic
      - ====Theory
      - Experimental/Theory/Std/Generic/Theory/Definition.agda
      - ====Logical Framework
      - Experimental/Theory/Std/Generic/LogicalFramework/Definition.agda
      - =Applications
      - ==Editor
      - ===Notes
      - Editor/Notes.agda
    libraryDefinitions_Filename: hata.agda-lib


      # - Experimental/Theory/Std/Generic/Theory/Definition.agda
      # - Experimental/Theory/Std/Generic/LogicalFramework/Definition.agda


      # - Writing/Introduction.agda
      # - Core/Type.agda
      # - Core/Type/Equiv.agda
      # - Core/Category.agda
      # - Core/Category/Definition.agda
      # - Core/Category/Instance.agda
      # - Core/Category/Instance/Type.agda
      # - Core/Category/Instance/Set/Definition.agda
      # - Core/Category/Instance/Opposite.agda
      # - Core/Category/Instance/Functor.agda
      # - Core/Category/Instance/Cat/Definition.agda
      # - Core/Category/Functor/Category.agda
      # - Core/Category/Functor.agda
      # - Core/Category/Functor/Adjunction.agda
      # - Core/Category/Functor/Representable.agda
      # - Core/Category/Functor/Presheaf.agda
      # - Core/Category/Quiver.agda
      # - Core/Category/FreeCategory.agda
      # - Core/Category/Limit.agda
      # - Core/Category/Limit/Specific.agda
      # - Core/Category/Limit/Specific/Coequalizer.agda
      # - Core/Category/Limit/Specific/Coproduct.agda
      # - Core/Category/Limit/Specific/Initial.agda
      # - Core/Category/Limit/Kan.agda
      # - Core/Category/Limit/Kan/Definition.agda
      # - Core/Category/Limit/Kan/Local.agda
      # - Core/Category/Instance/Type.agda
      # - Core/Category/Instance/Set/Equalizers.agda
      # - Core/Category/Instance/IdxSet/Definition.agda
      # - Core/Category/Instance/IdxSet/Coproducts.agda
      # - Core/Category/Instance/Kleisli/Definition.agda
      # - Core/Category/Monad/Definition.agda
      # - Core/Category/Monad/Instance/Coproduct.agda
      # - Core/Algebra.agda
      # - Core/Algebra/Basic.agda
      # - Core/Algebra/Basic/Monoid.agda
      # - Core/Algebra/Basic/Group.agda
      # - Core/Algebra/Basic/Abelian.agda
      # - Core/Algebra/Basic/Ring.agda
      # - Core/Algebra/Action.agda
      # - Core/Algebra/Action/MonoidModule.agda
      # - Unification/Definition.agda
      # - Unification/RecAccessible.agda
      # - Unification/Instance/Signature.agda
      # - Unification/Substitution.agda
      # - Unification/RecMonad.agda
      # - Unification/RecModule.agda
      # - Unification/TheFunctor.agda
      # - Typechecking.agda
