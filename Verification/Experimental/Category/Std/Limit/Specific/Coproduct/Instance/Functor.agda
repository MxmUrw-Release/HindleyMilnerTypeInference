
module Verification.Experimental.Category.Std.Limit.Specific.Coproduct.Instance.Functor where

open import Verification.Conventions hiding (_โ_)
open import Verification.Experimental.Set.Setoid
open import Verification.Experimental.Data.Fin.Definition
open import Verification.Experimental.Data.Product.Definition
open import Verification.Experimental.Category.Std.Morphism.Epi.Definition
open import Verification.Experimental.Category.Std.Category.Definition
open import Verification.Experimental.Category.Std.Functor.Definition
open import Verification.Experimental.Category.Std.Category.Construction.Product
open import Verification.Experimental.Category.Std.Limit.Specific.Coproduct.Definition
open import Verification.Experimental.Category.Std.Category.Structured.FiniteCoproduct.Definition

module _ {๐ : ๐ฐ ๐} {{_ : isCategory {๐} ๐}} {{_ : hasCoproducts โฒ ๐ โฒ }} where
-- {{_ : FiniteCoproductCategory ๐ on ๐}} where

  ๐' : Category _
  ๐' = โฒ ๐ โฒ

  map-โ : โ{a b c d : ๐} -> (a โถ b) ร (c โถ d) -> (a โ c โถ b โ d)
  map-โ (f , g) = โฆ f โ ฮนโ , g โ ฮนโ โฆ

  private instance
    -- TODO: Why is it necessary to create this local instance?
    _ = isSetoidHom:โฆโฆ

  -- private
  --   lem-1 : โ{a b : ๐} -> map-โ (id {a = a} , id {a = b}) โผ id
  --   lem-1 {a} {b} = P
  --     where
  --       ida : a โถ a
  --       ida = id

  --       idb : b โถ b
  --       idb = id

  --       idab : (a โ b) โถ (a โ b)
  --       idab = id

  --       P = โงผ ฯโ โ ida , ฯโ โ idb โงฝ    โจ cong-โผ (unit-r-โ โ unit-l-โ โปยน , unit-r-โ โ unit-l-โ โปยน) โฉ-โผ
  --           โงผ idab โ ฯโ , idab โ ฯโ โงฝ  โจ expand-โ โปยน โฉ-โผ
  --           idab                       โ

  instance
    isSetoidHom:map-โ : โ{a b c d : ๐} -> isSetoidHom โฒ((a โถ b) ร-๐ฐ (c โถ d))โฒ (a โ c โถ b โ d) (map-โ)
    isSetoidHom:map-โ = {!!}

  -- instance
  isFunctor:โ : isFunctor (๐' ร-๐๐๐ญ ๐') ๐' (ฮปโ _โ_)
  isFunctor.map isFunctor:โ               = map-โ
  isFunctor.isSetoidHom:map isFunctor:โ   = isSetoidHom:map-โ
  -- {!!} -- record { cong-โผ = ฮป (p , q) โ cong-โผ (refl โ p , refl โ q) }
  isFunctor.functoriality-id isFunctor:โ  = {!!} -- lem-1
  isFunctor.functoriality-โ isFunctor:โ   = {!!}

  --------------------------------------------------------------
  -- properties

  module _ {a b c d : ๐} {f : a โถ b} {g : c โถ d} where
    module _ {{_ : isEpi f}} {{_ : isEpi g}} where
      isEpi:map-โ : isEpi (map-โ (f , g))
      isEpi.cancel-epi isEpi:map-โ {ฮฑ = ฮฑ} {ฮฒ} p =
        let
          lem-1 : ฮนโ โ ฮฑ โผ ฮนโ โ ฮฒ
          lem-1 = p
               โช (refl โ_) โซ
               >> ฮนโ โ (map-โ (f , g) โ ฮฑ) โผ ฮนโ โ (map-โ (f , g) โ ฮฒ) <<
               โช assoc-r-โ โโผโ assoc-r-โ โซ
               >> (ฮนโ โ map-โ (f , g)) โ ฮฑ โผ (ฮนโ โ map-โ (f , g)) โ ฮฒ <<
               โช reduce-ฮนโ โ refl โโผโ reduce-ฮนโ โ refl โซ
               >> (f โ ฮนโ) โ ฮฑ โผ (f โ ฮนโ) โ ฮฒ <<
               โช assoc-l-โ โโผโ assoc-l-โ โซ
               >> f โ (ฮนโ โ ฮฑ) โผ f โ (ฮนโ โ ฮฒ) <<
               โช cancel-epi โซ

          lem-2 : ฮนโ โ ฮฑ โผ ฮนโ โ ฮฒ
          lem-2 = p
               โช (refl โ_) โซ
               >> ฮนโ โ (map-โ (f , g) โ ฮฑ) โผ ฮนโ โ (map-โ (f , g) โ ฮฒ) <<
               โช assoc-r-โ โโผโ assoc-r-โ โซ
               >> (ฮนโ โ map-โ (f , g)) โ ฮฑ โผ (ฮนโ โ map-โ (f , g)) โ ฮฒ <<
               โช reduce-ฮนโ โ refl โโผโ reduce-ฮนโ โ refl โซ
               >> (g โ ฮนโ) โ ฮฑ โผ (g โ ฮนโ) โ ฮฒ <<
               โช assoc-l-โ โโผโ assoc-l-โ โซ
               >> g โ (ฮนโ โ ฮฑ) โผ g โ (ฮนโ โ ฮฒ) <<
               โช cancel-epi โซ

          lem-3 : ฮฑ โผ ฮฒ
          lem-3 = (lem-1 , lem-2)
                  โช cong-โผ {{isSetoidHom:โฆโฆ}} โซ
                  >> โฆ ฮนโ โ ฮฑ , ฮนโ โ ฮฑ โฆ โผ โฆ ฮนโ โ ฮฒ , ฮนโ โ ฮฒ โฆ <<
                  โช expand-ฮนโ,ฮนโ โปยน โโผโ expand-ฮนโ,ฮนโ โปยน โซ

        in lem-3

