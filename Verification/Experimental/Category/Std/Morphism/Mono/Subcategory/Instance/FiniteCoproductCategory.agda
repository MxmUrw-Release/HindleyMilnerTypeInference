
module Verification.Experimental.Category.Std.Morphism.Mono.Subcategory.Instance.FiniteCoproductCategory where

open import Verification.Conventions hiding (_โ_)

open import Verification.Experimental.Set.Setoid.Definition
open import Verification.Experimental.Category.Std.Category.Definition
open import Verification.Experimental.Category.Std.Functor.Definition
open import Verification.Experimental.Category.Std.Category.Subcategory.Definition
open import Verification.Experimental.Category.Std.Morphism.Mono.Definition
open import Verification.Experimental.Category.Std.Morphism.Mono.Subcategory.Definition
open import Verification.Experimental.Category.Std.Limit.Specific.Coproduct.Definition

module _ {๐ : Category ๐} {{_ : hasFiniteCoproducts ๐}} where


  _โ-๐๐ฎ๐โโโโ_ : (a b : ๐๐ฎ๐โโโโ ๐) -> ๐๐ฎ๐โโโโ ๐
  _โ-๐๐ฎ๐โโโโ_ a b = incl (โจ a โฉ โ โจ b โฉ)

  module _ {a b : ๐๐ฎ๐โโโโ ๐} where
    isCoproduct:โ-๐๐ฎ๐โโโโ : isCoproduct a b (a โ-๐๐ฎ๐โโโโ b)
    isCoproduct.ฮนโ isCoproduct:โ-๐๐ฎ๐โโโโ              = subcathom ฮนโ {!!}
    isCoproduct.ฮนโ isCoproduct:โ-๐๐ฎ๐โโโโ              = {!!}
    isCoproduct.โฆ isCoproduct:โ-๐๐ฎ๐โโโโ โฆ             = {!!}
    isCoproduct.isSetoidHom:โฆโฆ isCoproduct:โ-๐๐ฎ๐โโโโ  = {!!}
    isCoproduct.reduce-ฮนโ isCoproduct:โ-๐๐ฎ๐โโโโ       = {!!}
    isCoproduct.reduce-ฮนโ isCoproduct:โ-๐๐ฎ๐โโโโ       = {!!}
    isCoproduct.expand-โ isCoproduct:โ-๐๐ฎ๐โโโโ        = {!!}

  instance
    hasFiniteCoproducts:๐๐ฎ๐โโโโ : hasFiniteCoproducts (๐๐ฎ๐โโโโ ๐)
    hasFiniteCoproducts:๐๐ฎ๐โโโโ = {!!}



