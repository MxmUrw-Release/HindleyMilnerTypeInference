

* Theories

The purpose of this /theory of theories/ is to explicitly describe a framework in
which all efforts in the area of syntax and semantics of type theories and programming languages
can be located. We want to include everything one would intuitively expect to be part of such research.
Thus we necessarily end up with a very rudimentary picture, based on a least common denominator.
Such a picture does not help with proving new theorems, and will not be surprising to anyone familiar
with the usual concepts and goals. In fact it should merely reflect this state of mind in a formal environment.

We follow the common notion that a (type) theory may be viewed from the following perspectives:
- /Type Theory/: A formal system with a set of terms and types/contexts, and a typing judgement relating them with each other.
- /Category/: A set of objects, and sets of arrows between them, encoding the notion of composition.
- /Computational Model/: A set of (possibly typed) terms with rewriting rules between them.

The "best" type theories (simple type theory, dependent type theory) incorporate all of these perspectives,
and this is known as /computational trilogy/ [cite]. But our goal at the moment is not to describe the "best" type theories,
but to give a definition which subsumes anything which looks like a theory at all. Our attempt at describing the least common denominator
between the three perspectives is as follows:

\begin{definition}
  A theory is given by:
  \begin{enumerate}
    \item A type $\mathscr{T} : \mathscr{U}$ of statements.
    \item For any statement $\phi : \mathscr{T}$, a setoid $\phi\,\square : \mathbf{Std}$ of proofs of this statement.
  \end{enumerate}
\end{definition}
  


# https://q.uiver.app/?q=WzAsNyxbMiwyXSxbMSw1LCJcXHRleHRiZntUaGVvfSJdLFsyLDQsIlxcdGV4dGJme0NvbXB9Il0sWzEsNCwiXFx0ZXh0YmZ7Q2F0fSJdLFsxLDIsIlxcdGV4dGJme1RoZW99XisiXSxbMCw0LCJcXHRleHRiZntUVH0iXSxbMSwwLCJcXG1hdGhiZnsxfSJdLFsyLDFdLFszLDFdLFs0LDMsIiIsMix7InN0eWxlIjp7ImJvZHkiOnsibmFtZSI6ImRhc2hlZCJ9fX1dLFs0LDIsIiIsMix7InN0eWxlIjp7ImJvZHkiOnsibmFtZSI6ImRhc2hlZCJ9fX1dLFs1LDFdLFs0LDUsIiIsMix7InN0eWxlIjp7ImJvZHkiOnsibmFtZSI6ImRhc2hlZCJ9fX1dLFs2LDQsIlxcTGFtYmRhIiwxLHsiY3VydmUiOjF9XSxbNiw0LCJcXFBpIiwxLHsiY3VydmUiOi0xfV0sWzYsNCwiXFxtdWx0aW1hcCIsMSx7ImN1cnZlIjozfV0sWzYsNCwiXFxtYXRoaXR7Q1RUfSIsMSx7ImN1cnZlIjotM31dLFs2LDUsIlxcZm9yYWxsIiwxLHsiY3VydmUiOjR9XSxbNiwyLCJcXG1hdGhpdHtBU019IiwxLHsiY3VydmUiOi00fV1d
\begin{tikzcd}
	& {\mathbf{1}} \\
	\\
	& {\textbf{Theo}^+} & {} \\
	\\
	{\textbf{TT}} & {\textbf{Cat}} & {\textbf{Comp}} \\
	& {\textbf{Theo}}
	\arrow[from=5-3, to=6-2]
	\arrow[from=5-2, to=6-2]
	\arrow[dashed, from=3-2, to=5-2]
	\arrow[dashed, from=3-2, to=5-3]
	\arrow[from=5-1, to=6-2]
	\arrow[dashed, from=3-2, to=5-1]
	\arrow["\Lambda"{description}, curve={height=6pt}, from=1-2, to=3-2]
	\arrow["\Pi"{description}, curve={height=-6pt}, from=1-2, to=3-2]
	\arrow["\multimap"{description}, curve={height=18pt}, from=1-2, to=3-2]
	\arrow["{\mathit{CTT}}"{description}, curve={height=-18pt}, from=1-2, to=3-2]
	\arrow["\forall"{description}, curve={height=24pt}, from=1-2, to=5-1]
	\arrow["{\mathit{ASM}}"{description}, curve={height=-24pt}, from=1-2, to=5-3]
\end{tikzcd}







